#!/usr/bin/env python3
import sys
control_string='ATTGGGCCCC'
dna_seq1= 'GATGGGATTggggttttccccTCCCATGTGCTCAAGACTGGCGCTaaaaGttttGAGCTTCTCaaaaGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCggggACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGccccCTCTGAGTCAGGAAACAttttCAGACCTATGGAAACTACTTCCTGaaaaCAACGTTCTGTccccCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTccccGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTccccCCGTGGccccTGCACCAGCAGCTCCTACACCGGCGGccccTGCACCAGccccCTCCTGGccccTGTCATCTTCTGTCCCTTCCCAGaaaaCCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTccccTGCCCTCAACAAGATGttttGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACAccccCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGccccCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGccccTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACttttCG'
print(control_string.count('A'),'number of A')
print(control_string.count('T'),'number of T')
print(control_string.count('G'),'number of G')
print(control_string.count('C'),'number of C')


dna_seq1_upper= dna_seq1.upper()
print(dna_seq1_upper[:20])


#no 7
dna_seq2 ='GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG'

dna_seq_replaced= dna_seq2.replace('T','U')
print(dna_seq_replaced[:30])


#no 8
dna_seq_replaced_mixedcase= (sys.argv[1]).upper().replace('T','U')
print(dna_seq_replaced_mixedcase)
print(dna_seq_replaced_mixedcase.count('A'), 'total A')
print(dna_seq_replaced_mixedcase.count('T'), 'total T')
print(dna_seq_replaced_mixedcase.count('G'), 'total G')
print(dna_seq_replaced_mixedcase.count('C'), 'total C')


#no 9
dna_seq_countA=(sys.argv[1].count('A'))
dna_seq_countT=(sys.argv[1].count('T'))
dna_seq_AvsT=dna_seq_countA/dna_seq_countT
print(dna_seq_AvsT)
print(dna_seq_countA,'total A')
print(dna_seq_countT,' total T')


#no 10,11,12
dna_seq_subs= (sys.argv[1])
print(dna_seq_subs[5:9])
print(dna_seq_subs[5:9].count('G'),'total no of Gs in the substring 100:200')

#no 13'
comp_seq=(sys.argv[1].replace('T', 'a').replace('A','t').replace('G','c').replace('C','g'))
reverse_comp_seq= comp_seq[::-1].upper()
print(reverse_comp_seq)


#no 14
seq_EcoR1=(sys.argv[1].find('GAATTC'))
print(seq_EcoR1)
print(sys.argv[1][395:401])
startPos=(sys.argv[1][395])
endPos=(sys.argv[1][401])
print(f'EcoR1 startPos{startPos} and endPos{endPos}')
